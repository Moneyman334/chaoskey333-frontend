<!-- Include Ethers + Stripe Scripts -->
<script src="https://cdn.jsdelivr.net/npm/ethers@5.7.2/dist/ethers.umd.min.js"></script>
<script src="https://js.stripe.com/v3/"></script>

<script>
  const stripe = Stripe("pk_live_YOUR_PUBLIC_KEY"); // Replace with your real Stripe Public Key

  async function createStripeCheckoutSession() {
    if (!window.ethereum) {
      alert("‚ö†Ô∏è MetaMask not detected.");
      return;
    }

    try {
      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });
      const walletAddress = accounts[0];

      const response = await fetch('/api/create-checkout-session', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          walletAddress: walletAddress,
          connectedWalletType: 'MetaMask',
          amount: 33300,
          currency: 'usd',
          productName: 'ChaosKey333 Relic Mint'
        }),
      });

      const session = await response.json();
      if (session.sessionId) {
        await stripe.redirectToCheckout({ sessionId: session.sessionId });
      } else {
        alert('Failed to start checkout.');
      }
    } catch (err) {
      console.error('Checkout Error:', err);
      alert('‚ùå Error starting Stripe checkout.');
    }
  }

  async function mintRelic() {
    const contractAddress = "0xYourDeployedGoerliAddress"; // üîÅ Plug in your real Goerli contract
    const abi = [{
      "inputs": [],
      "name": "mintRelic",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }];

    try {
      const provider = new ethers.providers.Web3Provider(window.ethereum);
      const signer = provider.getSigner();
      const contract = new ethers.Contract(contractAddress, abi, signer);
      const tx = await contract.mintRelic();
      await tx.wait();
      alert("‚úÖ Relic minted successfully!");
    } catch (err) {
      console.error("Mint Error:", err);
      alert("‚ùå Minting failed.");
    }
  }

  // Auto-trigger relic minting after Stripe returns success
  const urlParams = new URLSearchParams(window.location.search);
  if (urlParams.get("success") === "true") {
    mintRelic();
  }
</script>
